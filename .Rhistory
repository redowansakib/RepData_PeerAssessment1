plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
svd1 <- svd(scale(dataMatrixOrdered))
svd$u
svd1$u
svd1$u
class(svd1$u)
class(svd1)
class(svd1$u)
class(svd1$u["matrix"])
svd1$u["matrix"]
svd1$u["array"]
svd1$u[1]
svd1$u[2]
svd1$u[3]
str(svd1$u)
svd1$u[,1]
svd1$u[1]
svd1$u[1,1]
svd1$u[,1]
svd1$u[,2]
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(svd1$u[, 2], 40:1, , xlab = "Row", ylab = "First left singular vector",
pch = 19)
plot(svd1$v[, 1], xlab = "Column", ylab = "First right singular vector", pch = 19)
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(svd1$u[, 3], 40:1, , xlab = "Row", ylab = "First left singular vector",
pch = 19)
plot(svd1$v[, 1], xlab = "Column", ylab = "First right singular vector", pch = 19)
svd1 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(svd1$u[, 1], 40:1, , xlab = "Row", ylab = "First left singular vector",
pch = 19)
plot(svd1$v[, 1], xlab = "Column", ylab = "First right singular vector", pch = 19)
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order, ]
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 1:40, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
par(mfrow = c(2, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 1:40, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(svd1$u[, 1], 40:1, , xlab = "Row", ylab = "First left singular vector",
pch = 19)
plot(svd1$v[, 1], xlab = "Column", ylab = "First right singular vector", pch = 19)
par(mar = rep(0.5, 4))
par(mfrow = c(2, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 1:40, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
par(mar = rep(1, 4))
par(mfrow = c(2, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 1:40, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
par(mar = rep(5, 4))
par(mfrow = c(2, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 1:40, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
par(mar = rep(3, 4))
par(mfrow = c(2, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 1:40, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
par(mar = rep(5, 4))
par(mfrow = c(2, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 1:40, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(svd1$u[, 1], 40:1, , xlab = "Row", ylab = "First left singular vector",
pch = 19)
plot(svd1$v[, 1], xlab = "Column", ylab = "First right singular vector", pch = 19)
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
strsplit(cnams,'|',fixed=TRUE)
strsplit(cnames,'|',fixed=TRUE)
cnames <- strsplit(cnames,'|',fixed=TRUE)
cnames
names(pm0) <- cnames[[1]][wcol]
names(pm0) <- mkaes.names(cnames[[1]][wcol])
names(pm0) <- mkae.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates <- pm1$Date
str(date)
str(dates)
dates <- as.dates(as.character(dates),"%Y%m%d")
dates <- as.date(as.character(dates),"%Y%m%d")
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0,State.Code==36,county.site %in% both)
cnt0 <- subset(pm0,State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1,State.Code==36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site), nrow)
sapply(split(cnt0,cnt1$county.site), nrow)
sapply(split(cnt1,cnt1$county.site), nrow)
pm0sub <- subset(cnt0,County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1,County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng <- range(x0sub,x1sub,na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(sample.value,state.code,mean,na.rm=TRUE))
mn0 <- with(pm0, tapply(sample.value,State.Code,mean,na.rm=TRUE))
mn0 <- with(pm0, tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0),mean=mn0)
d1 <- data.frame(state = names(mn1),mean=mn1)
mrg <- merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segment(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
dev.off()
rm(list=ls())
load("D:/Coursera Data Science Course/ProgrammingAssignment2/.RData")
read.csv("activity.zip")
read.csv("activity.zip")
getwd()
setwd(r"(D:\Coursera Data Science Course\5 - Reproducible Research\Courese Project 1)")
read.csv("activity.zip")
?read.csv
read.csv(unzip("activity.zip","activity.csv"))
activity <- read.csv(unzip("activity.zip","activity.csv"))
View(activity)
View(activity)
activity$date
class(activity$date)
class(activity$interval)
as.Date?
?as.Date
?as.Date
activity$date <- as.Date(activity$date,"%Y-%m-%d")
View(activity)
View(activity)
class(activity$date)
library(dplyr)
total_steps_per_day <- group_by(activity,date) %>% summarise(total_steps=sum(steps))
head(total_steps_per_day)
total_steps_per_day <- group_by(activity,date) %>% summarise(total_steps=sum(steps,na.rm = True))
total_steps_per_day <- group_by(activity,date) %>%    summarise(total_steps=sum(steps,na.rm = TRUE))
head(total_steps_per_day)
activity$date <- as.Date(activity$date)
activity[activity$date = "2012-10-01",]
activity[activity$date == "2012-10-01",]
activity[activity$date == "2012-10-01",1]
library(ggplot2)
g <- ggplot(total_steps_per_day,aes(x=date,y=total_steps))
g + geom_col()
g + geom_col(color="red") + labs(main= "Total Number of Steps Taken per Day",x="",y="Total Steps")
g + geom_col(fill="red") + labs(main= "Total Number of Steps Taken per Day",x="",y="Total Steps")
g + geom_col(color="balck",fill="red") + labs(main= "Total Number of Steps Taken per Day",x="",y="Total Steps")
g + geom_col(color="black",fill="red") + labs(main= "Total Number of Steps Taken per Day",x="",y="Total Steps")
g + geom_col(color="yellow",fill="red") + labs(main= "Total Number of Steps Taken per Day",x="",y="Total Steps")
g + geom_col(color="red",fill="cyan") + labs(main= "Total Number of Steps Taken per Day",x="",y="Total Steps")
g + geom_col(color="blue",fill="violet") + labs(main= "Total Number of Steps Taken per Day",x="",y="Total Steps")
g + geom_col(fill="violet") + labs(main= "Total Number of Steps Taken per Day",x="",y="Total Steps")
g + geom_col(fill="deeppink") + labs(main= "Total Number of Steps Taken per Day",x="",y="Total Steps")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
mean_steps_per_day <- group_by(activity,date) %>%
summarise(total_steps=mean(steps,na.rm = TRUE))
print("Mean steps per day")
prit(head(mean_steps_per_day))
print("Mean steps per day/ntry")
print("Mean steps per day\ntry")
print(cat("Mean steps per day\ntry"))
print(cat("Mean steps per day\n"))
print(cat(paste("Mean steps per day\n",head(mean_steps_per_day))))
median_steps_per_day <- group_by(activity,date) %>%
summarise(total_steps=median(steps,na.rm = TRUE))
View(mean_steps_per_day)
mean_steps_per_day <- group_by(activity,date) %>%
summarise(mean_steps=mean(steps,na.rm = TRUE))
g_mean <- ggplot(mean_steps_per_day,aes(x=date,y=mean_steps))
g +
geom_col(fill="cornflowerblue") +
labs(main= "Mean Steps Taken per Day",x="",y="Mean Steps")
g_mean <- ggplot(mean_steps_per_day,aes(x=date,y=mean_steps))
g_mean +
geom_col(fill="cornflowerblue") +
labs(main= "Mean Steps Taken per Day",x="",y="Mean Steps")
median_steps_per_day <- group_by(activity,date) %>%
summarise(median_steps=median(steps,na.rm = TRUE))
head(median_steps_per_day)
g_median <- ggplot(median_steps_per_day,aes(x=date,y=median_steps))
g_median +
geom_col(fill="aquamarine1") +
labs(main= "Median Steps Taken per Day",x="",y="Median Steps")
g_median <- ggplot(median_steps_per_day,aes(x=date,y=median_steps))
g_median +
geom_col(fill="aquamarine1") +
labs(main= "Median Steps Taken per Day",x="",y="Median Steps")
head(median_steps_per_day)
group_by(activity,date)
group_by(activity,date) %>%
summarise(median_steps=median(steps,na.rm = TRUE))
group_by(activity,date) %>%
summarise(median_steps=mean(steps,na.rm = TRUE))
head(mean_steps_per_day)
group_by(activity,date) %>%
summarise(median_steps=mean(steps,na.rm = T))
group_by(activity,date) %>%
summarise(median_steps=median(steps,na.rm = T))
?median
median(c(1,2,3))
median(activity$steps)
median(activity$steps,na.rm = TRUE)
median(c(1L,2L,3L))
activity$steps[activity$steps == 0L]
sum(activity$steps == 0L)
sum(activity$steps == 0L,na.rm = T)
daily_avg <- group_by(activity,interval) %>% summarise(avg_interval=mean(interval))
daily_avg <- group_by(activity,interval) %>% summarise(avg_steps=mean(steps))
daily_avg <- group_by(activity,interval) %>%
summarise(avg_steps=mean(steps,na.rm = T))
g_daily <- ggplot(daily_avg,aes(x=interval,avg_steps))
g_daily +
geom_line() +
lab(main="Daily Average Steps",x="",y="Average Steps")
g_daily +
geom_line() +
labs(main="Daily Average Steps",x="",y="Average Steps")
which.max(g_daily$avg_steps)
which.max(g_daily$avg_steps,na.rm=T)
which.max(g_daily$avg_steps)
print(which.max(g_daily$avg_steps))
as.numeric(which.max(g_daily$avg_steps))
max(g_daily$avg_steps)
max(daily_avg$avg_steps)
which.max(daily_avg$avg_steps)
daily_avg[which.max(daily_avg$avg_steps),]
daily_avg[which.max(daily_avg$avg_steps),]
daily_avg[which.max(daily_avg$avg_steps),1]
daily_avg[which.max(daily_avg$avg_steps),1][[1]]
daily_avg <- group_by(activity,interval) %>%
summarise(avg_steps=mean(steps,na.rm = T))
max_step <- daily_avg[which.max(daily_avg$avg_steps),1]
print(paste("Maximum mean daily interval is",max_step[[1]]," with",max_step[[2]],"steps"))
print(paste("Maximum mean daily interval is",max_step[,1]," with",max_step[,2],"steps"))
max_step
max_step <- daily_avg[which.max(daily_avg$avg_steps)]
max_step <- daily_avg[which.max(daily_avg$avg_steps)]
max_step <- daily_avg[which.max(daily_avg$avg_steps),]
print(paste("Maximum mean daily interval is",max_step[,1]," with",max_step[,2],"steps"))
g_daily <- ggplot(daily_avg,aes(x=interval,avg_steps))
g_daily +
geom_line() +
labs(main="Daily Average Steps",x="",y="Average Steps")
install.packages("impute")
install.packages("imputation")
install.packages("imputation")
install.packages("VIM")
library(VIM)
?knn
?knn()
?kNN()
activity_imp <- kNN(activity,variable = c("step"),k=6)
activity_imp <- kNN(activity,variable = c("steps"),k=6)
activity_imp <- kNN(activity,variable = c("steps"),k=6,impNA = F)
activity_imp <- kNN(activity,variable = c("steps"),k=6,imp_var = F)
mean_imp <- group_by(activity_imp,date) %>%
summarise(mean_steps=mean(steps,na.rm = TRUE))
head(mean_imp)
total_imp <- group_by(activity_imp,date) %>%
summarise(total_steps=sum(steps,na.rm = TRUE))
g_tot_imp <- ggplot(total_imp,aes(x=date,y=total_steps))
g_tot_imp +
geom_col(fill="deeppink") +
labs(main= "Total Number of Steps Taken per Day",x="",y="Total Steps")
median_imp <- group_by(activity_imp,date) %>%
summarise(median_steps=median(steps,na.rm = TRUE))
head(median_imp)
g_tot_imp +
geom_col(fill="deeppink") +
labs(main= "Total Number of Steps Taken per Day",x="",y="Total Steps")
?factor
wd <- weekdays(activity$date)
f <- factor(wd,levels=c("weekend","weekday"),labels=c("Saturday"="weekend","Sunday"="weekend"))
f <- factor(wd,labels=c("Saturday"="weekend",
"Sunday"="weekend",
"Monday"="weekday",
"Tuesday"="weekday",
"Wedday"="weekday",
"Thursday"="weekday",
"Friday"="weekday"))
f
f[wd=="Monday"]
f[wd=="Monday"]
f[wd=="Saturday"]
f[wd=="Sunday"]
f[wd=="Friday"]
wd <- weekdays(activity$date)
f <- factor(wd,labels=c("Saturday"="weekend",
"Sunday"="weekend",
"Monday"="weekday",
"Tuesday"="weekday",
"Wedday"="weekday",
"Thursday"="weekday",
"Friday"="weekday"))
f <- factor(wd,labels=c("Monday"="weekday")
rm("f")
f <- factor(wd,labels=c("Monday"="weekday"))
f <- factor(wd,labels=c("Monday"="weekend"))
f <- factor(wd,labels=c("Saturday"="sat",
"Sunday"="sun",
"Monday"="mon",
"Tuesday"="tue",
"Wedday"="wed",
"Thursday"="thu",
"Friday"="Fri"))
f[wd=="Saturday"]
f[wd=="sunday"]
f[wd=="Sunday"]
f <- factor(wd)
f <- factor(wd)
labels(f)
f <- factor(wd,levels=weekdays(Sys.Date()+0:6))
?as.date
?as.Date
weekdays(as.Date(4,"1970-01-01",tz="GMT")+0:6)
f <- factor(wd,levels=weekdays(as.Date(4,"1970-01-01",tz="GMT")+0:6))
rep("weekday",5)
cat(rep("weekday",5),rep("weekend",2))
f <- factor(wd,levels=weekdays(as.Date(4,"1970-01-01",tz="GMT")+0:6),
labels =cat(rep("weekday",5),rep("weekend",2)))
length(cat(rep("weekday",5),rep("weekend",2)))
class(cat(rep("weekday",5),rep("weekend",2)))
f <- factor(wd,levels=weekdays(as.Date(4,"1970-01-01",tz="GMT")+0:6),
labels =c(rep("weekday",5),rep("weekend",2)))
activity$day <- factor(activity$date,levels=weekdays(as.Date(4,"1970-01-01",tz="GMT")+0:6),
labels =c(rep("weekday",5),rep("weekend",2)))
activity$day <- factor(weekdays(activity$date),levels=weekdays(as.Date(4,"1970-01-01",tz="GMT")+0:6),
labels =c(rep("weekday",5),rep("weekend",2)))
days <- weekdays(activity$date)
day_names <- weekdays(as.Date(4,"1970-01-01",tz="GMT")+0:6)
activity$day <- factor(days,levels=day_names,
labels =c(rep("weekday",5),rep("weekend",2)))
activity_imp$day <- factor(weekdays(activity_imp$date),levels=weekdays(as.Date(4,"1970-01-01",tz="GMT")+0:6),
labels =c(rep("weekday",5),rep("weekend",2)))
group_by(activity_imp,day,intrval)
group_by(activity_imp,day,interval)
group_by(activity_imp,day,interval) %>% summarise(mean_steps=mean(steps))
day_activity -> group_by(activity_imp,day,interval) %>% summarise(mean_steps=mean(steps))
day_activity <- group_by(activity_imp,day,interval) %>% summarise(mean_steps=mean(steps))
View(day_activity)
g_days <- ggplot(days_activity,aes(x=interval,y=steps))
days_activity <- group_by(activity_imp,day,interval) %>%
summarise(mean_steps=mean(steps))
g_days <- ggplot(days_activity,aes(x=interval,y=steps))
g_days +
geom_line()+
labs(main="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(.~day)
g_days <- ggplot(days_activity,aes(x=interval,y=mean_steps))
g_days +
geom_line()+
labs(main="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(.~day)
g_days +
geom_line()+
labs(main="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(.~day,labellar=function(lables){
c("weekday"="Weekday",
"weekend"="Weekend")
})
g_days +
geom_line()+
labs(main="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(.~day,labeller=function(lables){
c("weekday"="Weekday",
"weekend"="Weekend")
})
?facet_grid
g_days +
geom_line()+
labs(main="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(.~day) + label_parsed(c("Weekday","Weekend"))
g_days +
geom_line()+
labs(main="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(.~day,labeller=c("weekday"="Weekday","weekend"="Weekend"))
g_days +
geom_line()+
labs(main="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(.~day,labeller=list("weekday"="Weekday","weekend"="Weekend"))
g_days +
geom_line()+
labs(main="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(.~day,labeller=c("Weekday","Weekend"))
g_days +
geom_line()+
labs(main="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(.~day)
g_daily +
geom_line() +
labs(main="Daily Average Steps",x="",y="Average Steps")
g_daily +
geom_line() +
labs(main="Daily Average Steps",x="",y="Average Steps") +
?labs
g_daily +
geom_line() +
labs(main="Daily Average Steps",x="",y="Average Steps") +
?labs
?labs
g_daily +
geom_line() +
labs(tiltle="Daily Average Steps",x="",y="Average Steps")
g_daily +
geom_line() +
labs(title="Daily Average Steps",x="",y="Average Steps")
g_daily +
geom_line() +
labs(title="Daily Average Steps",x="",y="Average Steps") +
theme(plot.title = element_text(hjsut=0.5))
g_daily +
geom_line() +
labs(title="Daily Average Steps",x="",y="Average Steps") +
theme(plot.title = element_text(hjust=0.5))
g_days +
geom_line()+
labs(title="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(day~.) + theme(plot.title = element_text(hjust=0.5))
g_days +
geom_line()+
labs(title="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(day~.) + theme(plot.title = element_text(hjust=0.5))
?facet_grid
?facet_wrap
g_days +
geom_line()+
labs(title="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(day~.) + theme(plot.title = element_text(hjust=0.5))+
facet_wrap(vars(day),strip.position="top")
g_days +
geom_line()+
labs(title="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(day~.) + theme(plot.title = element_text(hjust=0.5))
g_days +
geom_line()+
labs(title="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
facet_grid(day~.) + theme(plot.title = element_text(hjust=0.5))+
facet_wrap(vars(day),strip.position="top")
g_days +
geom_line()+
labs(title="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
theme(plot.title = element_text(hjust=0.5))+
facet_wrap(vars(day),strip.position="top")+facet_grid(day~.)
g_days +
geom_line()+
labs(title="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
theme(plot.title = element_text(hjust=0.5))+
facet_wrap(vars(day),strip.position="top")
g_days +
geom_line()+
labs(title="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
theme(plot.title = element_text(hjust=0.5))+
facet_wrap(vars(.~day),strip.position="top")
g_days +
geom_line()+
labs(title="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
theme(plot.title = element_text(hjust=0.5))+
facet_wrap(vars(day),strip.position="top")
g_days +
geom_line()+
labs(title="Activity Patterns Between Weekdays and Weekends",x="",y="Mean steps")+
theme(plot.title = element_text(hjust=0.5))+
facet_wrap(vars(day),nrow=2,ncol=1,strip.position="top")
